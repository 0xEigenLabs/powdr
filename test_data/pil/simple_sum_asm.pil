namespace Main(2**10);
    col witness XInv;
    col witness XIsZero;
    XIsZero * (1 - XIsZero) = 0;

assembly {
    reg pc[@pc];
    reg X[<=];
    reg A;
    reg CNT;

    pil {
        // Just to test if pil-inside-assembly-inside-pil works.
        XIsZero  = 1 - X * XInv;
        XIsZero * X = 0;
    }

    instr jmpz X, l: label { pc' = XIsZero * l + (1 - XIsZero) * (pc + 1) }
    instr jmp l: label { pc' = l }
    instr dec_CNT { CNT' = CNT - 1 }
    instr assert_zero X { XIsZero = 1 }

    CNT <=X= ${ ("input", 1) };

    start::
    jmpz CNT, check;
    A <=X= A + ${ ("input", CNT + 1) };
    // Could use "CNT <=X= CNT - 1", but that would need X.
    dec_CNT;
    jmp start;

    check::
    A <=X= A - ${ ("input", 0) };
    assert_zero A;

    end::
    jmp end;
};