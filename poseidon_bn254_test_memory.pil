namespace std::array(512);
    let fold = (|arr, initial, folder| std::utils::fold(std::array::len(arr), (|i| arr[i]), initial, folder));
    let len = [];
    let map = (|arr, f| std::array::new(std::array::len(arr), (|i| f(arr[i]))));
    let new = (|length, f| std::utils::fold(length, f, [], (|acc, e| (acc + [e]))));
    let sum: int[] -> int = (|arr| std::array::fold(arr, 0, (|a, b| (a + b))));
    let zip2 = (|array1, array2, fn| std::array::new(std::array::len(array1), (|i| fn(array1[i], array2[i]))));
    let zip3 = (|array1, array2, array3, fn| std::array::new(std::array::len(array1), (|i| fn(array1[i], array2[i], array3[i]))));
namespace std::check(512);
    let assert = (|condition, reason| if !condition { std::check::panic(reason()) } else { [] });
    let panic = [];
namespace std::convert(512);
    let fe = [];
    let int = [];
namespace std::debug(512);
    let print: string -> constr[] = [];
    let println: string -> constr[] = (|msg| std::debug::print((msg + "\n")));
namespace std::field(512);
    let modulus = [];
namespace std::math::ff(512);
    let add = (|x, y, modulus| std::math::ff::reduce((x + y), modulus));
    let div = (|x, y, modulus| std::math::ff::mul(x, std::math::ff::inverse(y, modulus), modulus));
    let extended_gcd = (|a, b| if (b == 0) { if (a == 1) { [1, 0] } else { std::check::panic("Inputs are not co-prime, inverse does not exist.") } } else { (|r| [r[1], (r[0] - ((a / b) * r[1]))])(std::math::ff::extended_gcd(b, (a % b))) });
    let inverse = (|x, modulus| if ((x <= 0) || (x >= modulus)) { if (x == 0) { std::check::panic("Tried to compute the inverse of zero.") } else { std::check::panic("Tried to compute the inverse of a negative number or a number outside the field.") } } else { std::math::ff::reduce(std::math::ff::extended_gcd(x, modulus)[0], modulus) });
    let mul = (|x, y, modulus| std::math::ff::reduce((x * y), modulus));
    let reduce = (|x, modulus| if (x < 0) { ((modulus - (-x % modulus)) % modulus) } else { (x % modulus) });
    let sub = (|x, y, modulus| std::math::ff::reduce((x - y), modulus));
namespace std::utils(512);
    let cross_product: int[] -> (int -> int)[] = (|sizes| std::utils::cross_product_internal(1, 0, sizes));
    let cross_product_internal: int, int, int[] -> (int -> int)[] = (|cycle_len, pos, sizes| if (pos >= std::array::len(sizes)) { [] } else { ([(|i| ((i / cycle_len) % sizes[pos]))] + std::utils::cross_product_internal((cycle_len * sizes[pos]), (pos + 1), sizes)) });
    let fold = (|length, f, initial, folder| if (length <= 0) { initial } else { folder(std::utils::fold((length - 1), f, initial, folder), f((length - 1))) });
    let force_bool: expr -> constr = (|c| ((c * (1 - c)) = 0));
    let sum = (|length, f| std::utils::fold(length, f, 0, (|acc, e| (acc + e))));
    let unchanged_until = (|c, latch| (((c' - c) * (1 - latch)) = 0));
namespace main(512);
    col witness m_addr;
    col witness m_step;
    col witness m_change;
    col witness m_value;
    col witness m_is_write;
    col witness m_is_read;
    col fixed POSITIVE(i) { (i + 1) };
    col fixed LAST = [0]* + [1];
    col fixed STEP(i) { i };
    (main.m_change * (1 - main.m_change)) = 0;
    ((main.m_addr' - main.m_addr) * (1 - main.m_change)) = 0;
    (1 - main.LAST) { ((main.m_change * (main.m_addr' - main.m_addr)) + ((1 - main.m_change) * (main.m_step' - main.m_step))) } in { main.POSITIVE };
    ((1 - main.m_change) * main.LAST) = 0;
    (main.m_is_write * (1 - main.m_is_write)) = 0;
    (main.m_is_read * (1 - main.m_is_read)) = 0;
    (main.m_is_read * main.m_is_write) = 0;
    (((1 - main.m_is_write') * (1 - main.m_change)) * (main.m_value' - main.m_value)) = 0;
    (((1 - main.m_is_write') * main.m_change) * main.m_value') = 0;
    col witness _operation_id(i) query ("hint", 9);
    col witness pc;
    col witness X0;
    col witness X1;
    col witness X2;
    col witness X3;
    col witness reg_write_X1_A;
    col witness A;
    col witness instr_mstore;
    main.instr_mstore { main.X0, main.STEP, main.X1 } is main.m_is_write { main.m_addr, main.m_step, main.m_value };
    col witness instr_mload;
    main.instr_mload { main.X0, main.STEP, main.X1 } is main.m_is_read { main.m_addr, main.m_step, main.m_value };
    col witness instr_poseidon;
    col witness instr_assert_eq;
    (main.instr_assert_eq * (main.X0 - main.X1)) = 0;
    col witness instr__jump_to_operation;
    col witness instr__reset;
    col witness instr__loop;
    col witness instr_return;
    col witness X0_const;
    col witness read_X0_A;
    main.X0 = ((main.read_X0_A * main.A) + main.X0_const);
    col witness X1_const;
    col witness X1_read_free;
    main.X1 = (main.X1_const + (main.X1_read_free * main.X1_free_value));
    main.X2 = 0;
    main.X3 = 0;
    col fixed first_step = [1] + [0]*;
    main.A' = ((main.reg_write_X1_A * main.X1) + ((1 - (main.reg_write_X1_A + main.instr__reset)) * main.A));
    col pc_update = (((main.instr__jump_to_operation * main._operation_id) + (main.instr__loop * main.pc)) + ((1 - ((main.instr__jump_to_operation + main.instr__loop) + main.instr_return)) * (main.pc + 1)));
    main.pc' = ((1 - main.first_step') * main.pc_update);
    col fixed p_line = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] + [9]*;
    col witness X0_free_value;
    col witness X1_free_value;
    col witness X2_free_value;
    col witness X3_free_value;
    col fixed p_X0_const = [0, 0, 40, 44, 48, 40, 400, 0, 0, 0] + [0]*;
    col fixed p_X1_const = [0, 0, 0, 1, 2, 400, 0, 7853200120776062878684798364095072458815029376092732009249414926327459813530, 0, 0] + [0]*;
    col fixed p_X1_read_free = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0] + [0]*;
    col fixed p_instr__jump_to_operation = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0] + [0]*;
    col fixed p_instr__loop = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1] + [1]*;
    col fixed p_instr__reset = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0] + [0]*;
    col fixed p_instr_assert_eq = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0] + [0]*;
    col fixed p_instr_mload = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0] + [0]*;
    col fixed p_instr_mstore = [0, 0, 1, 1, 1, 0, 0, 0, 0, 0] + [0]*;
    col fixed p_instr_poseidon = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0] + [0]*;
    col fixed p_instr_return = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0] + [0]*;
    col fixed p_read_X0_A = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0] + [0]*;
    col fixed p_reg_write_X1_A = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0] + [0]*;
    { main.pc, main.reg_write_X1_A, main.instr_mstore, main.instr_mload, main.instr_poseidon, main.instr_assert_eq, main.instr__jump_to_operation, main.instr__reset, main.instr__loop, main.instr_return, main.X0_const, main.read_X0_A, main.X1_const, main.X1_read_free } in { main.p_line, main.p_reg_write_X1_A, main.p_instr_mstore, main.p_instr_mload, main.p_instr_poseidon, main.p_instr_assert_eq, main.p_instr__jump_to_operation, main.p_instr__reset, main.p_instr__loop, main.p_instr_return, main.p_X0_const, main.p_read_X0_A, main.p_X1_const, main.p_X1_read_free };
    col fixed _block_enforcer_last_step = [0]* + [1];
    col witness _operation_id_no_change;
    main._operation_id_no_change = ((1 - main._block_enforcer_last_step) * (1 - main.instr_return));
    (main._operation_id_no_change * (main._operation_id' - main._operation_id)) = 0;
    main.instr_poseidon { 0, main.X0, main.X1 } in main_poseidon.LASTBLOCK { main_poseidon.operation_id, main_poseidon.input_addr, main_poseidon.output_addr };
    col fixed _linker_first_step = [1] + [0]*;
    (main._linker_first_step * (main._operation_id - 2)) = 0;
namespace main_poseidon(512);
    col witness operation_id;
    constant STATE_SIZE = 3;
    constant FULL_ROUNDS = 8;
    constant PARTIAL_ROUNDS = 57;
    constant ROWS_PER_HASH = ((main_poseidon.FULL_ROUNDS + main_poseidon.PARTIAL_ROUNDS) + 1);
    col fixed L0 = [1] + [0]*;
    col fixed FIRSTBLOCK(i) { match (i % main_poseidon.ROWS_PER_HASH) { 0 => 1, _ => 0, } };
    col fixed LASTBLOCK(i) { match (i % main_poseidon.ROWS_PER_HASH) { (main_poseidon.ROWS_PER_HASH - 1) => 1, _ => 0, } };
    col fixed LAST = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]* + [1];
    col fixed PARTIAL = [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]*;
    let bn = (|a1, a2, a3, a4, a5, a6, a7, a8| ((((((((a1 << 224) | (a2 << 192)) | (a3 << 160)) | (a4 << 128)) | (a5 << 96)) | (a6 << 64)) | (a7 << 32)) | a8));
    col fixed C_0 = [main_poseidon.bn(250193298, 3130692888, 3495528150, 1458834465, 348428604, 297478547, 2367804531, 80580206), main_poseidon.bn(791133801, 266006086, 3285068023, 1395332040, 1455641410, 3360414318, 546726672, 4208722384), main_poseidon.bn(679558602, 3954092674, 2318888440, 2062853691, 3367485223, 2907293225, 2398598023, 3207090797), main_poseidon.bn(364193076, 52093327, 2139499698, 3481073504, 2869995541, 171146012, 3449421678, 2274874408), main_poseidon.bn(273812234, 3072445151, 3924817947, 24101709, 3345851244, 628659064, 399218573, 111011161), main_poseidon.bn(81746518, 4288003247, 2958161841, 3443763611, 2805071719, 3832558085, 2414072856, 1452788861), main_poseidon.bn(86817314, 1440731148, 2085105987, 3129820820, 1222915462, 2847198609, 2214399620, 980131750), main_poseidon.bn(51710844, 3604337019, 623498091, 3774249859, 743100360, 2230275813, 3457531403, 4215966985), main_poseidon.bn(590493667, 681290292, 3138682519, 784120145, 1684652953, 4240468475, 2298075692, 3263329973), main_poseidon.bn(712226591, 2602634485, 2973931095, 748499675, 4049003184, 2264877020, 1576354358, 1514163904), main_poseidon.bn(192181681, 44131757, 2136676571, 1310617679, 1385171619, 624667334, 2185652270, 1458152078), main_poseidon.bn(698848743, 3649054868, 1855224693, 3578699524, 1081534586, 2066252724, 2070372085, 4086027886), main_poseidon.bn(339726613, 3456695079, 3392727932, 3464637253, 394407122, 277891282, 3872447948, 2709352904), main_poseidon.bn(776926480, 4278939610, 1604927659, 1279492338, 1785449316, 3633588152, 618034523, 1572463372), main_poseidon.bn(810588561, 4170031952, 1270822734, 3584746224, 877175340, 1982024844, 2567897587, 980636166), main_poseidon.bn(706314903, 2621437940, 1037915197, 2300324541, 3716216836, 3229079413, 60466000, 776187375), main_poseidon.bn(559377219, 2387608649, 2706498798, 2937565524, 677144820, 759349632, 2316413939, 1984694096), main_poseidon.bn(372200003, 2523948227, 2430637399, 2038755985, 2948211302, 3280951996, 3634094325, 2993979051), main_poseidon.bn(493827191, 635732330, 4076815679, 215313177, 2652594665, 4127320493, 3857223096, 1888787881), main_poseidon.bn(390780442, 340314265, 2723419719, 1330196528, 509364551, 1383719011, 2590076380, 1169980244), main_poseidon.bn(709644230, 3960147189, 563443752, 1908858171, 941409887, 1927293653, 654539362, 2853951492), main_poseidon.bn(15689011, 582040940, 2291910679, 365133175, 2798462589, 1499220617, 161829996, 2090323953), main_poseidon.bn(710340511, 743702202, 3755619159, 1572715912, 1511149095, 2159798807, 239430570, 3457131966), main_poseidon.bn(80091262, 1106085917, 3249682888, 2407505219, 2851418056, 3367423441, 3882764129, 1532096768), main_poseidon.bn(716396056, 885683075, 1523605341, 2060162315, 1251617894, 1805067994, 2200058118, 1534868226), main_poseidon.bn(357222798, 24153185, 474982165, 2568945736, 2566224185, 3508986770, 69824989, 2431131590), main_poseidon.bn(108292705, 1458283844, 649716258, 116480700, 2846290974, 1867734127, 891633694, 2690991654), main_poseidon.bn(727095091, 1690617077, 3248745549, 2748173827, 2282875665, 1874060379, 3245772070, 4228593496), main_poseidon.bn(266084184, 1418429808, 443307269, 3929221673, 1686007604, 2906801090, 3931417993, 2095834445), main_poseidon.bn(371472662, 3600624803, 3753144866, 617923682, 3044238921, 793110797, 2323747663, 465809735), main_poseidon.bn(94946553, 2525727395, 3082057891, 261774179, 1695488423, 1585242396, 2852001472, 3077308604), main_poseidon.bn(669552012, 368278990, 3830390356, 631578092, 3172166885, 152725351, 3835611476, 1288507418), main_poseidon.bn(359935641, 3116344099, 360708293, 2264229390, 2892464967, 1631899082, 3743970494, 1162242842), main_poseidon.bn(363168277, 1707880130, 3463988605, 2979524083, 1404562362, 743777079, 232574013, 2668915303), main_poseidon.bn(804764815, 1132514793, 2547646646, 380697809, 2945388177, 3808304855, 965227616, 2651002322), main_poseidon.bn(2392406, 338677815, 977772433, 4280524438, 257531895, 3914065563, 2133469443, 98638221), main_poseidon.bn(699114303, 2040522348, 787682122, 3926143854, 3426214796, 483529146, 1211025943, 3806067425), main_poseidon.bn(583908491, 1880193745, 1074889168, 773146014, 2093826671, 3899246537, 1562235595, 254062392), main_poseidon.bn(291953125, 1415671226, 2658483946, 1115428791, 4274870464, 1994384423, 145788763, 2017110447), main_poseidon.bn(720641979, 1639615104, 4258230271, 2654957378, 697564815, 172374521, 1647594626, 622088326), main_poseidon.bn(673192500, 3314868131, 1299794326, 3326294560, 3511859906, 2811255954, 1816191621, 2872241846), main_poseidon.bn(248015078, 3512619481, 1682925281, 3594984084, 1486164426, 13803024, 339283566, 3827650395), main_poseidon.bn(187527725, 152674730, 3638253809, 6465838, 2697292484, 655262252, 3391260192, 411704640), main_poseidon.bn(204279355, 1607824713, 849081992, 1571187611, 2030780638, 4247553616, 1982006584, 454461555), main_poseidon.bn(510653217, 1802013757, 2574087222, 2103235777, 3158875462, 1968092946, 3259234061, 458477499), main_poseidon.bn(623031823, 1319317622, 1084277468, 3762420649, 564924579, 3589314287, 1195756163, 2189815833), main_poseidon.bn(261359288, 694510755, 1929662587, 2377793233, 1647776371, 2692423625, 2148662486, 2909937759), main_poseidon.bn(423253622, 1771630238, 176575197, 792403360, 909070164, 4146297172, 1335196877, 4009443855), main_poseidon.bn(81860631, 1661275736, 20202715, 3415863696, 722582565, 3641425354, 1082996761, 4110340907), main_poseidon.bn(327347662, 2574377350, 1233038769, 2930898219, 599046203, 4009900720, 3511822516, 3438060954), main_poseidon.bn(173646168, 3824075281, 2121176295, 4041858767, 415498197, 3780319890, 425943384, 3148833522), main_poseidon.bn(332832673, 668480534, 1523959755, 2813155821, 1390457072, 3828187114, 2514587755, 1376330161), main_poseidon.bn(627971930, 499153209, 248347815, 66793019, 434921856, 1565459406, 3589562086, 3708774892), main_poseidon.bn(423550350, 2681159030, 637173028, 3046679000, 2670945002, 4107633391, 3970791160, 2044946528), main_poseidon.bn(275017007, 637787705, 2717167198, 2003936842, 1882044136, 1874291382, 12539711, 2417018641), main_poseidon.bn(174767389, 2201565427, 1014240590, 67417268, 173366203, 3961642490, 4251397590, 541585434), main_poseidon.bn(370885155, 778156108, 3206025391, 2476969920, 3469622614, 684271648, 65776821, 3272787755), main_poseidon.bn(746660082, 1760494927, 2171626691, 1776134122, 2424535038, 2879767775, 4225372399, 1491649878), main_poseidon.bn(603934621, 1182872663, 3479230767, 1466008473, 2782929580, 840738128, 2236277305, 413282026), main_poseidon.bn(810607481, 2522442623, 2180416273, 1126008628, 3685210406, 3546494357, 3770734813, 4109431935), main_poseidon.bn(664201872, 3530141481, 4126715123, 958468686, 1313844541, 3194325317, 3846630977, 500869579), main_poseidon.bn(89061919, 1706097890, 2206239077, 660440955, 1133355580, 3853598233, 1668910257, 1149052324), main_poseidon.bn(486233698, 3905903305, 577405166, 397634238, 3413355359, 2279694738, 2068007393, 239853320), main_poseidon.bn(262401115, 2491950492, 783601444, 1344010969, 3190737380, 744278220, 3558462118, 2462767216), main_poseidon.bn(266383224, 1491376217, 3802484079, 450446769, 829071947, 4225573806, 1084674251, 1891887793), 0]*;
    col fixed C_1 = [main_poseidon.bn(15811666, 905057420, 1501976689, 1778129869, 2289764564, 3490212063, 1452736500, 156690532), main_poseidon.bn(724230572, 4136336269, 605470399, 1028612660, 3076783620, 3087285988, 2340628414, 3164695794), main_poseidon.bn(656893755, 751552771, 4051812152, 3787576333, 540247634, 12800700, 352921773, 3724135288), main_poseidon.bn(231275222, 3655643999, 1591321553, 2260180195, 2383317645, 458797362, 3607221486, 3479753206), main_poseidon.bn(527255572, 2609807229, 2602925454, 3590044404, 691161472, 1979633836, 3901398712, 525740022), main_poseidon.bn(108190101, 4177524288, 354106665, 216903444, 2257625354, 2357470375, 4142671915, 1850468392), main_poseidon.bn(193703406, 1762319246, 2965206129, 729389487, 2195608944, 1917955447, 369589433, 1011240412), main_poseidon.bn(751179820, 1578390638, 1022465311, 389616181, 1400172472, 1031833994, 3194604337, 2090771813), main_poseidon.bn(97055988, 3956582115, 3380663062, 1958723171, 587431713, 3008030116, 3893112140, 618005120), main_poseidon.bn(449425473, 2059192737, 2471561193, 4291370435, 3961057988, 3689411113, 1990680763, 1548797024), main_poseidon.bn(58468425, 3784428094, 3676069449, 4142446737, 2089041463, 2472997610, 850082472, 2373944392), main_poseidon.bn(541301260, 2226332395, 1168344442, 4229494146, 1854698370, 3366017116, 1350295961, 2552222255), main_poseidon.bn(207932396, 2982622392, 1469484475, 3707245517, 4167112281, 842906815, 3359843170, 1005177585), main_poseidon.bn(8505691, 3291710694, 1675072112, 3377909307, 2300949750, 3493048440, 3110307061, 91832334), main_poseidon.bn(473899261, 1430297171, 572226637, 1235441337, 4037087647, 2986769217, 2807206036, 1112458925), main_poseidon.bn(477425252, 4049477046, 4275945133, 1456919901, 3124960956, 963418873, 1554845459, 364731537), main_poseidon.bn(790085717, 2609899414, 145579169, 2480287504, 3169335372, 2170489094, 1950181680, 2204977822), main_poseidon.bn(726446643, 3991517768, 642698540, 2330266906, 3618134378, 2280824714, 2004330240, 2453222161), main_poseidon.bn(541789241, 2135866993, 3955415219, 3747320125, 4192644098, 3062706482, 1289001717, 3293992233), main_poseidon.bn(446044027, 3477966217, 4149862222, 3270757858, 3937020097, 2009862049, 983045844, 2587415279), main_poseidon.bn(329985299, 1825519572, 1206514401, 1249701321, 1584562052, 1190582743, 3847945217, 564123209), main_poseidon.bn(237324350, 1168532768, 2334530955, 2806010342, 1074558829, 1696962009, 2220542517, 3634599891), main_poseidon.bn(478372295, 2394279773, 3975903789, 397788169, 4071500185, 2758238952, 3997262400, 2831915761), main_poseidon.bn(330529752, 256714747, 282608433, 4143672659, 1266796062, 3512170052, 2659195773, 3701221735), main_poseidon.bn(491622082, 2447843547, 537913046, 2260784659, 2897177332, 3915201526, 2675889430, 2778183238), main_poseidon.bn(187932042, 3433551096, 1055774784, 2477716752, 1353934924, 2297999536, 1160009275, 3337244068), main_poseidon.bn(253293984, 3973136956, 1232025632, 3309945464, 954562830, 735093142, 2895215743, 4078991355), main_poseidon.bn(305621469, 1238741076, 3705105289, 2152405963, 2383647411, 2238802525, 2214508125, 1132407279), main_poseidon.bn(305609346, 1375641604, 3748178895, 259491540, 3169841804, 1572593859, 2488232028, 3231756786), main_poseidon.bn(519824493, 3617945780, 4134509275, 3364569976, 2881623398, 3785377084, 2704949593, 3401599682), main_poseidon.bn(552621937, 750917204, 4227750333, 878611884, 1064835271, 28952456, 765286327, 707979327), main_poseidon.bn(804180347, 2217238233, 3097872581, 3915006454, 1846109721, 2809147939, 392970734, 1128129745), main_poseidon.bn(447490131, 2281070210, 3365272680, 2279470085, 1997567060, 3337356055, 676266815, 667993989), main_poseidon.bn(605148538, 1209252248, 251297329, 2715507046, 3707129654, 71464784, 789923935, 684136231), main_poseidon.bn(12157723, 2491753817, 1591748388, 1193004312, 781525494, 3082512625, 3913016574, 3138206910), main_poseidon.bn(387798560, 3095132947, 684690434, 2873035930, 963745450, 1783901219, 1357599018, 724290985), main_poseidon.bn(513524089, 2768099160, 4258380569, 1158188359, 3876393290, 66494696, 3048891651, 1776699763), main_poseidon.bn(250626788, 1417092179, 983521189, 1548763086, 4247867637, 785992316, 3585774521, 3353005821), main_poseidon.bn(769993097, 1125811605, 2470522918, 893653979, 394248012, 3534490454, 4166363272, 897508454), main_poseidon.bn(295594061, 3832943967, 3852907546, 2394719707, 2266540839, 2292090343, 2175931578, 3460835267), main_poseidon.bn(138345850, 668038416, 2498236399, 2943922176, 2253161195, 1460766578, 1249255304, 3257713895), main_poseidon.bn(720584255, 2254926119, 448842163, 3979219266, 3973310283, 2476528653, 14235563, 2227799441), main_poseidon.bn(528026957, 2139943060, 3649097395, 2082755561, 1471498905, 2445949115, 3758497054, 3605357268), main_poseidon.bn(291699496, 1755064085, 1314554408, 3035048759, 2092740517, 2313323459, 1563951877, 1141350797), main_poseidon.bn(30051303, 942848208, 1746175954, 2098558978, 3611404019, 1826368005, 1988632467, 642222197), main_poseidon.bn(602980064, 28377757, 1381304157, 3700785027, 874040020, 4113263679, 2363583523, 1433556827), main_poseidon.bn(593537259, 214425338, 1740056984, 3734008142, 401038103, 1246948938, 3406982284, 3650482344), main_poseidon.bn(708397635, 2471462552, 798745967, 4110070128, 992895944, 2905819188, 3828389893, 3883380239), main_poseidon.bn(266020157, 4001597085, 1086535146, 1692306523, 2970531885, 2961923723, 526275922, 3218104099), main_poseidon.bn(54938000, 4031104750, 135907921, 4245795006, 2137110763, 2582727543, 3789972294, 31058101), main_poseidon.bn(116151496, 58835026, 3045847611, 825228604, 3804556192, 1698827000, 4106370768, 123719803), main_poseidon.bn(379197311, 1676306450, 1890698887, 2054410779, 3725867330, 4218543189, 4253698545, 2668676987), main_poseidon.bn(806366504, 1667939679, 3857887041, 804651087, 1976317453, 839245101, 2684518717, 1043132082), main_poseidon.bn(404130557, 888330517, 3493235944, 192623431, 3519522145, 3462468645, 4066790778, 2770275165), main_poseidon.bn(199974407, 3518132549, 4118147385, 1515568915, 798016091, 1088060216, 1691362349, 3406895099), main_poseidon.bn(442998621, 921402204, 2392926796, 770558206, 2972581870, 3293589874, 1889989019, 885987424), main_poseidon.bn(182063273, 209650976, 2500820295, 2785893994, 1228867960, 2132108517, 3499230171, 1205737995), main_poseidon.bn(477923364, 4149769535, 2776367224, 2624078359, 3106990419, 331134782, 1853589065, 2761330544), main_poseidon.bn(160717405, 343560038, 3471631936, 1574820304, 2941922385, 55743495, 3757173336, 4051714669), main_poseidon.bn(363794793, 963129513, 369150593, 46357570, 1827333446, 507483608, 2642580760, 3540712824), main_poseidon.bn(539852241, 3658443595, 52807859, 813122288, 504717614, 3370725450, 2091921822, 30616928), main_poseidon.bn(454438787, 3642222910, 3677554882, 2550324921, 3635046657, 330490184, 1691154145, 2386650609), main_poseidon.bn(253826942, 808089371, 3135690961, 3971183542, 748269364, 1646308353, 700792678, 1857175808), main_poseidon.bn(423366148, 3770493315, 1472931436, 352716814, 3547258088, 1550093504, 2246624635, 448089018), main_poseidon.bn(560949015, 3150438107, 139684386, 545537870, 765850074, 2850807549, 3903187571, 1148816674), 0]*;
    col fixed C_2 = [main_poseidon.bn(148894536, 2123024798, 522821720, 3506077881, 818358387, 192590700, 3900306313, 248476661), main_poseidon.bn(52023394, 120319870, 3433425600, 1872221397, 1498595701, 2875917290, 3863692487, 3690011898), main_poseidon.bn(592364636, 2725717954, 3880434987, 705991885, 1861997630, 872777686, 3103497777, 3864839730), main_poseidon.bn(466458111, 3255958474, 1611624543, 2906633575, 3931026296, 4130217964, 2541770008, 2759740828), main_poseidon.bn(496391670, 1378914324, 3533570287, 899811483, 4294499356, 2171538889, 3392454069, 1175226117), main_poseidon.bn(161043124, 344474708, 2987524311, 4289715551, 211459532, 116551822, 2680281120, 2606527929), main_poseidon.bn(295376272, 4046653359, 1511974481, 34342855, 1237409120, 1748664400, 3110326440, 3836919249), main_poseidon.bn(5255765, 509835460, 1355800873, 2751771510, 1108921054, 3670101547, 2463288691, 287043833), main_poseidon.bn(175840689, 809685910, 3120945176, 2736386642, 1388114782, 4088327569, 3995011506, 1494206043), main_poseidon.bn(314586010, 3766711426, 1068216438, 1887368313, 647970381, 1823540276, 2417356292, 1841905600), main_poseidon.bn(94798111, 2237067284, 3911611494, 505511579, 3575671900, 2476768705, 1174253942, 2803250287), main_poseidon.bn(772516057, 1302253386, 2498502736, 3342278641, 3142644343, 2577943405, 1244294954, 159565959), main_poseidon.bn(42610776, 1204192246, 1190963493, 3244556122, 3880727693, 1656927856, 4047662319, 2483280467), main_poseidon.bn(785772745, 482187081, 410922925, 3867664478, 3796441908, 2617481739, 3129646912, 597736248), main_poseidon.bn(280291315, 2875060227, 76878917, 2607683822, 3295392289, 1049498398, 386434996, 2111617388), main_poseidon.bn(122896072, 1354399640, 3938005052, 2900368203, 2655989387, 2188414202, 2620384346, 182535840), main_poseidon.bn(759660088, 1657829128, 2812185262, 2489413820, 2541069344, 320358218, 3865424049, 3085071118), main_poseidon.bn(747617458, 3716510684, 498792692, 1646810231, 1840443086, 1837483215, 1112860611, 1577300090), main_poseidon.bn(206354908, 1011865623, 1326533043, 3325836335, 2664137340, 3621528915, 1341717365, 3162096898), main_poseidon.bn(107807922, 1127339804, 3505356884, 3160458495, 85994514, 1780694042, 2185407715, 1622713098), main_poseidon.bn(287397167, 3391489558, 433212804, 1036527465, 3249557454, 3262076185, 1278099078, 2597087898), main_poseidon.bn(703936220, 3118298754, 609379429, 2652231822, 962249684, 3723046284, 1178897849, 2045688457), main_poseidon.bn(354090847, 951192079, 3225890953, 2867863659, 2213078666, 1984235455, 3553667915, 3879934405), main_poseidon.bn(27641142, 658255261, 4118331325, 851540858, 753100364, 710017836, 2468466353, 3303581924), main_poseidon.bn(68326610, 3427290402, 2404877566, 2031746347, 3106223378, 1084246897, 353683912, 191213341), main_poseidon.bn(156624030, 1712376130, 1420097612, 4222301253, 2565924638, 2952046557, 2179831221, 138004526), main_poseidon.bn(83291850, 391247664, 2328207103, 1542137374, 1270178648, 1054768073, 712213027, 3606539795), main_poseidon.bn(558347300, 4232628234, 2297320121, 292137678, 2844390980, 1685132553, 2485484335, 2954650601), main_poseidon.bn(568653034, 1597372507, 2910758191, 4148349416, 2789373291, 1794392579, 3716816693, 3249078325), main_poseidon.bn(132800133, 936336848, 2290483726, 598209415, 3563640146, 1541828485, 996617417, 1787336346), main_poseidon.bn(77672158, 3667787112, 2524117190, 2146316643, 1842187912, 3491580161, 2614692659, 3946044265), main_poseidon.bn(517459062, 3992214652, 1078083906, 259169523, 2498073641, 288434701, 1769126077, 1404039864), main_poseidon.bn(629480508, 2220705680, 4192054717, 3053810519, 2200841850, 1232559985, 3967134053, 1423342711), main_poseidon.bn(3043213, 1696648519, 333657528, 3233207014, 1206495630, 318033189, 1484950366, 4140518555), main_poseidon.bn(170873718, 2341388138, 2257664782, 1472220673, 480512100, 2319926184, 2104995263, 211563794), main_poseidon.bn(386551637, 1399815625, 1879604348, 282524375, 1623806487, 768953817, 2635089380, 3962873864), main_poseidon.bn(500328825, 2607157165, 1492645001, 771427162, 4272609385, 2848240719, 2627607619, 3182399241), main_poseidon.bn(291544582, 2909573090, 4068995843, 1614276741, 320399536, 2315475360, 993021948, 2788065924), main_poseidon.bn(805759823, 4235888001, 2590876818, 4087917597, 4112182875, 397994141, 1958674895, 1601300909), main_poseidon.bn(406173574, 3806892638, 411822681, 2922788151, 3037874370, 942207047, 3489105081, 2067781632), main_poseidon.bn(191858851, 1467062610, 1633216028, 4003625960, 297889271, 2001590353, 2651297124, 4129280315), main_poseidon.bn(189923857, 4177835495, 3499842966, 476761719, 878087252, 2111210891, 911009252, 2035413368), main_poseidon.bn(24243093, 3753868574, 2930343123, 2247589909, 142983522, 899851944, 3667054256, 508576307), main_poseidon.bn(789862838, 1575896091, 1689073770, 2447913231, 673995410, 2828933522, 371453826, 1232149440), main_poseidon.bn(527906160, 1878958021, 2264495829, 3186762716, 1744995848, 185650848, 194731491, 368665870), main_poseidon.bn(734113419, 2379986975, 3400281412, 1432278376, 1561601587, 3923742815, 1725513744, 2466786649), main_poseidon.bn(361175644, 3723155830, 2152497212, 3136234846, 3028376158, 2531232512, 1842068519, 1744341320), main_poseidon.bn(408524108, 4273498463, 1049322333, 3409203602, 2301415698, 591674279, 3021368968, 1992347970), main_poseidon.bn(93109898, 2588944317, 2857302882, 987671906, 1978697350, 4055927172, 2849490362, 3920949696), main_poseidon.bn(603439048, 1913504406, 4294130497, 4186961980, 1875555424, 1572006746, 2858139959, 2931231320), main_poseidon.bn(294154972, 2200833717, 1198216804, 2391178952, 2962440439, 2814161332, 2519666681, 3978272001), main_poseidon.bn(82792793, 477015447, 4014142087, 2915975385, 985575474, 3106076271, 4219378266, 1951421517), main_poseidon.bn(278498882, 3754769343, 470226108, 1944787956, 71541754, 2579428515, 533928929, 2197604242), main_poseidon.bn(691551233, 3956520619, 201422422, 3957741750, 2737368183, 3157484142, 702736731, 870998289), main_poseidon.bn(383157541, 544784691, 3691855562, 3593165960, 821648306, 3846920619, 3757830168, 3647972150), main_poseidon.bn(159447843, 1003771586, 963958030, 247455303, 648291306, 3662581615, 4224145710, 1058771926), main_poseidon.bn(443747639, 588298882, 839075234, 2596545422, 3555752586, 726536731, 3037584282, 4094162001), main_poseidon.bn(752479537, 4126697756, 2386158599, 2054486688, 4093685131, 1226748919, 3027970042, 1070714743), main_poseidon.bn(411933778, 2149962946, 3061211334, 3077683471, 2088609514, 2728214310, 2322453027, 3966748208), main_poseidon.bn(497471640, 2235772585, 2691538743, 4168341893, 3672716259, 1363569449, 69750179, 839748300), main_poseidon.bn(158164880, 3495671641, 359306539, 2724451954, 2732063175, 2297743409, 2728242404, 3237527135), main_poseidon.bn(568665118, 307645910, 4255063261, 705553310, 3992910868, 1724667534, 3318658885, 2689625820), main_poseidon.bn(376525347, 1952475538, 2952465879, 4145746622, 3290655469, 3861448006, 3169811999, 1364992800), main_poseidon.bn(271245198, 4148639138, 2123442224, 1842070473, 2674881169, 3443549560, 3457477162, 3669649656), main_poseidon.bn(497376457, 15782431, 1245604163, 2442234395, 1008972460, 2000448318, 4170067522, 674386273), 0]*;
    let C = [main_poseidon.C_0, main_poseidon.C_1, main_poseidon.C_2];
    col witness state[3];
    col witness input_addr;
    col witness output_addr;
    col witness a[3];
    main_poseidon.a[0] = (main_poseidon.state[0] + main_poseidon.C_0);
    main_poseidon.a[1] = (main_poseidon.state[1] + main_poseidon.C_1);
    main_poseidon.a[2] = (main_poseidon.state[2] + main_poseidon.C_2);
    col witness x2[3];
    col witness x4[3];
    col witness x5[3];
    main_poseidon.x2[0] = (main_poseidon.a[0] * main_poseidon.a[0]);
    main_poseidon.x2[1] = (main_poseidon.a[1] * main_poseidon.a[1]);
    main_poseidon.x2[2] = (main_poseidon.a[2] * main_poseidon.a[2]);
    main_poseidon.x4[0] = (main_poseidon.x2[0] * main_poseidon.x2[0]);
    main_poseidon.x4[1] = (main_poseidon.x2[1] * main_poseidon.x2[1]);
    main_poseidon.x4[2] = (main_poseidon.x2[2] * main_poseidon.x2[2]);
    main_poseidon.x5[0] = (main_poseidon.x4[0] * main_poseidon.a[0]);
    main_poseidon.x5[1] = (main_poseidon.x4[1] * main_poseidon.a[1]);
    main_poseidon.x5[2] = (main_poseidon.x4[2] * main_poseidon.a[2]);
    col witness b[3];
    main_poseidon.b[0] = main_poseidon.x5[0];
    main_poseidon.b[1] = ((main_poseidon.PARTIAL * (main_poseidon.a[1] - main_poseidon.x5[1])) + main_poseidon.x5[1]);
    main_poseidon.b[2] = ((main_poseidon.PARTIAL * (main_poseidon.a[2] - main_poseidon.x5[2])) + main_poseidon.x5[2]);
    let M = [[main_poseidon.bn(278626113, 463529161, 2998340783, 1547085745, 2495511569, 2904831883, 4275791961, 732434827), main_poseidon.bn(384647649, 1002029254, 1793136962, 1339931836, 2467617951, 3688819285, 3603318083, 3695772640), main_poseidon.bn(730905504, 264897929, 4128761820, 3219664397, 4144409444, 216736891, 2031784887, 1312191341)], [main_poseidon.bn(694809214, 3979453568, 3116592246, 1132059594, 751369681, 1096564190, 3593027772, 3725318001), main_poseidon.bn(774117881, 3959614521, 1285059016, 848707009, 3097326652, 2356909632, 699543830, 2276589091), main_poseidon.bn(269513200, 52656566, 2536593526, 1762592061, 344804880, 2673848421, 3366636629, 2700647418)], [main_poseidon.bn(338698732, 1751793459, 224370277, 1178076764, 3872225762, 2354788179, 845300974, 1705095591), main_poseidon.bn(393003049, 1767559205, 2191986431, 145161625, 3495420206, 1491589046, 2976702379, 3371051281), main_poseidon.bn(430177290, 1450191860, 398098414, 939678015, 2789492483, 117718903, 1931975895, 489018848)]];
    col witness c[3];
    main_poseidon.c[0] = (((7511745149465107256748700652201246547602992235352608707588321460060273774987 * main_poseidon.b[0]) + (10370080108974718697676803824769673834027675643658433702224577712625900127200 * main_poseidon.b[1])) + (19705173408229649878903981084052839426532978878058043055305024233888854471533 * main_poseidon.b[2]));
    main_poseidon.c[1] = (((18732019378264290557468133440468564866454307626475683536618613112504878618481 * main_poseidon.b[0]) + (20870176810702568768751421378473869562658540583882454726129544628203806653987 * main_poseidon.b[1])) + (7266061498423634438633389053804536045105766754026813321943009179476902321146 * main_poseidon.b[2]));
    main_poseidon.c[2] = (((9131299761947733513298312097611845208338517739621853568979632113419485819303 * main_poseidon.b[0]) + (10595341252162738537912664445405114076324478519622938027420701542910180337937 * main_poseidon.b[1])) + (11597556804922396090267472882856054602429588299176362916247939723151043581408 * main_poseidon.b[2]));
    ((main_poseidon.state[0]' - main_poseidon.c[0]) * (1 - main_poseidon.LAST)) = 0;
    ((main_poseidon.state[1]' - main_poseidon.c[1]) * (1 - main_poseidon.LAST)) = 0;
    ((main_poseidon.state[2]' - main_poseidon.c[2]) * (1 - main_poseidon.LAST)) = 0;
    (main_poseidon.FIRSTBLOCK * (0 - main_poseidon.state[0])) = 0;
    (main_poseidon.FIRSTBLOCK * (1 - main_poseidon.state[1])) = 0;
    (main_poseidon.FIRSTBLOCK * (2 - main_poseidon.state[2])) = 0;
    ((main_poseidon.input_addr' - main_poseidon.input_addr) * (1 - main_poseidon.LAST)) = 0;
    ((main_poseidon.output_addr' - main_poseidon.output_addr) * (1 - main_poseidon.LAST)) = 0;
    col fixed _block_enforcer_last_step = [0]* + [1];
    col witness _operation_id_no_change;
    main_poseidon._operation_id_no_change = ((1 - main_poseidon._block_enforcer_last_step) * (1 - main_poseidon.LASTBLOCK));
    (main_poseidon._operation_id_no_change * (main_poseidon.operation_id' - main_poseidon.operation_id)) = 0;
    main_poseidon.x4[1] = (main_poseidon.x2[1] * main_poseidon.x2[1]);
    main_poseidon.x4[2] = (main_poseidon.x2[2] * main_poseidon.x2[2]);
    main_poseidon.x5[0] = (main_poseidon.x4[0] * main_poseidon.a[0]);
    main_poseidon.x5[1] = (main_poseidon.x4[1] * main_poseidon.a[1]);
    main_poseidon.x5[2] = (main_poseidon.x4[2] * main_poseidon.a[2]);
    main_poseidon.b[0] = main_poseidon.x5[0];
    main_poseidon.b[1] = ((main_poseidon.PARTIAL * (main_poseidon.a[1] - main_poseidon.x5[1])) + main_poseidon.x5[1]);
    main_poseidon.b[2] = ((main_poseidon.PARTIAL * (main_poseidon.a[2] - main_poseidon.x5[2])) + main_poseidon.x5[2]);
    main_poseidon.c[0] = (((7511745149465107256748700652201246547602992235352608707588321460060273774987 * main_poseidon.b[0]) + (10370080108974718697676803824769673834027675643658433702224577712625900127200 * main_poseidon.b[1])) + (19705173408229649878903981084052839426532978878058043055305024233888854471533 * main_poseidon.b[2]));
    main_poseidon.c[1] = (((18732019378264290557468133440468564866454307626475683536618613112504878618481 * main_poseidon.b[0]) + (20870176810702568768751421378473869562658540583882454726129544628203806653987 * main_poseidon.b[1])) + (7266061498423634438633389053804536045105766754026813321943009179476902321146 * main_poseidon.b[2]));
    main_poseidon.c[2] = (((9131299761947733513298312097611845208338517739621853568979632113419485819303 * main_poseidon.b[0]) + (10595341252162738537912664445405114076324478519622938027420701542910180337937 * main_poseidon.b[1])) + (11597556804922396090267472882856054602429588299176362916247939723151043581408 * main_poseidon.b[2]));
    ((main_poseidon.state[0]' - main_poseidon.c[0]) * (1 - main_poseidon.LAST)) = 0;
    ((main_poseidon.state[1]' - main_poseidon.c[1]) * (1 - main_poseidon.LAST)) = 0;
    ((main_poseidon.state[2]' - main_poseidon.c[2]) * (1 - main_poseidon.LAST)) = 0;
    (main_poseidon.FIRSTBLOCK * (0 - main_poseidon.state[0])) = 0;
    (main_poseidon.FIRSTBLOCK * (1 - main_poseidon.state[1])) = 0;
